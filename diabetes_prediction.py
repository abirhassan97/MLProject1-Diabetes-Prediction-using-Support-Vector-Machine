# -*- coding: utf-8 -*-
"""Diabetes Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VxvL9Q2D5_DIKCSg6ZO4M-k8OgWo2tta

**Import**
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn import svm

"""**Read Data**"""

Data = pd.read_csv('/content/diabetes.csv')

"""**Standardize & Split Data**"""

X = Data.drop(columns='Outcome', axis=1)
Y = Data['Outcome']

scaler = StandardScaler()
Standadized_data = scaler.fit_transform(X)


# filling X again with Standardized Datas

X = Standadized_data
Y = Data['Outcome']

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, stratify=Y, random_state=2)

"""**Training Model**"""

classifier = svm.SVC(kernel='linear')

classifier.fit(X_train, Y_train)

"""**Evaluation**"""

X_train_predict = classifier.predict(X_train)
Train_acc = accuracy_score(X_train_predict, Y_train)

print(Train_acc)

X_test_predict = classifier.predict(X_test)
Test_acc = accuracy_score(X_test_predict, Y_test)

print(Test_acc)

input_data = (5,166,72,19,175,25.8,0.587,51)

input_data_as_numpy_array = np.asarray(input_data)

input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

std_data = scaler.transform(input_data_reshaped)

prediction = classifier.predict(std_data)
print(prediction)